#include <unistd.h>

int	ft_isalpha(char *src) //1
{
	int	i;

	i = 0;
	if (*src == '\0')
		return (1);
	while (*(src + i) != '\0')
	{
		if (*(src + i) < 'A' || (*(src + i) > 'Z'
				&& *(src + i) < 'a') || *(src + i) > 'z')
			return (0);
		i++;
	}
	return (1);
}

int	ft_isdigit(char *src) //2
{
	int	i;

	i = 0;
	if (*src == '\0')
		return (1);
	while (*(src + i) != '\0')
	{
		if (!(*(src + i) >= '0' && *(src + i) <= '9'))
			return (0);
		i++;
	}
	return (1);
}

int ft_isalnum(char *src) //3 PRUEBA
{
	int i;

	i =0;
	if (*src == '\0')
		return(1);
	while (*(src + i) != '\0')
	{
		if ((*(src + i) < 'A' || *(src + i) > 'Z'
			&& *(src + i) < 'a' || *(src + i) > 'z')
			|| (*(src + i) >= '0')   )


	}


}



int	ft_str_is_printable(char *src) //5
{
	int	i;

	i = 0;
	if (*src == '\0')
		return (1);
	while (*(src + i) != '\0')
	{
		if (!(*(src + i) >= 32 && *(src + i) <= '~'))
			return (0);
		i++;
	}
	return (1);
}

int	ft_strlen(char *str) //6
{
	int	a;

	a = 0;
	while (str[a] != '\0')
	{
		a++;
	}
	return (a);
}

unsigned int	ft_strlcpy(char *dest, char *src, unsigned int size) //11
{
	unsigned int	i;
	unsigned int	pos;

	i = 0;
	pos = 0;
	while (src[i] != '\0')
		i++;
	if (size != 0)
	{
		while (src[pos] != '\0' && pos < (size - 1))
		{
			dest[pos] = src[pos];
			pos++;
		}
		dest[pos] = '\0';
	}
	return (i);
}

int	counter(char *ptr) //12
{
	int	c;

	c = 0;
	while (ptr[c] != '\0')
	{
		c++;
	}
	return (c);
}

unsigned int	ft_strlcat(char *dest, char *src, unsigned int size) //12
{
	unsigned int	a;
	int				b;
	int				c;
	int				retorno;

	a = 0;
	c = counter(src);
	b = counter(dest);
	b++;
	while (a < (size - 1))
	{
		dest[b] = src[a];
		a++;
		b++;
	}
	retorno = b + c;
	return (retorno);
}



